<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gy.mapper.UserInfoMapper">
	<insert id="addAdmin" parameterType="UserInfo">
		insert into
		userInfo(user_name,realname,age,sex,pic,password,usign,introduce,email,status,tel,qq,time,temp02,temp03)
		values(#{user_name},#{realname},#{age},#{sex},#{pic},#{password},#{usign},#{introduce},#{email},#{status},#{tel},#{qq},#{time},null,null)
	</insert>
	
	<select id="findUsername" parameterType="UserInfo" resultType="UserInfo">
		select user_name from userInfo where user_name=#{user_name}
	</select>
	
	<select id="findEmail" parameterType="UserInfo" resultType="UserInfo">
		select email from userInfo where email=#{email}
	</select>
	
	<!-- 通过密码和用户名登录 -->
	<select id="findUserInfoByUserName" parameterType="UserInfo" resultType="UserInfo">
		select * from userInfo where user_name=#{user_name} and password=#{password}
	</select>
	
	<!-- 通过密码和邮箱登录登录 -->
	<select id="findUserInfoByUserEmail" parameterType="UserInfo" resultType="UserInfo">
		select * from userInfo where email=#{user_name} and password=#{password}
	</select>
	
	<!-- 通过ID查询用户信息 -->
	<select id="findUserInfoByUserId" parameterType="UserInfo" resultType="UserInfo">
		select * from userInfo where user_id=#{user_id}
	</select>
	
	<!-- //通过userid查课程信息 -->
	<resultMap type="Course" id="CourseByUsidMap">
		<id column="course_id" property="course_id"/>
		<result property="course_name" column="course_name" />
		<result property="course_view" column="course_view" />
		<result property="course_description" column="course_description" />
		<result property="coursephoto" column="coursephoto" />
		<result property="courseting" column="courseting" />
		<result property="price" column="price" />
		<result property="memberCount" column="memberCount" />
		<result property="assessAvg" column="assessAvg" />
		<result property="totalCm" column="totalCm" />
		<result property="studyPeriod" column="studyPeriod" />
		<collection property="userInfo" ofType="UserInfo">
			<id property="course_id" column="course_id" />
			<result property="course_name" column="course_name" />
		</collection>
		<collection property="class_category" ofType="Class_category">
			<id property="class_id" column="class_id" />
			<result property="class_categorys" column="class_categorys" />
		</collection>
	</resultMap>
	<select id="getCourseByUsid" resultMap="CourseByUsidMap" parameterType="UserInfo">
		 select s.*,(select count(1) from studyCourse where course_id = s.course_id ) memberCount,
		(select avg(assess) from studyCourse where course_id = s.course_id) assessAvg,
		(select count(*) from class_hour cm where cm.course_id=s.course_id ) totalCm,
		(select studyPeriod from studyCourse sc where sc.user_id=#{user_id} and sc.course_id=s.course_id) studyPeriod
		 from course s where s.course_id in(select course_id from studyCourse  where user_id =#{user_id})
	</select>
	
	<select id="findPic" parameterType="UserInfo" resultType="UserInfo">
		select * from userInfo where user_id=#{user_id}
	</select>
	
	<update id="updateUserInfo" parameterType="UserInfo">
		update userinfo set user_name=#{user_name},realname=#{realname},age=#{age},email=#{email},sex=#{sex},usign=#{usign},email=#{email},introduce=#{introduce}
		where user_id=#{user_id}
	</update>
	
	<update id="updatePic" parameterType="UserInfo">
		update userinfo set pic=#{pic}
		where user_id=#{user_id}
	</update>
	
	<update id="updatePwd" parameterType="UserInfo">
		update userinfo set password=#{password}
		where user_id=#{user_id}
	</update>
	

	<select id="findPicByUsername" parameterType="UserInfo" resultType="UserInfo">
		select * from userInfo where user_name=#{user_name}
	</select>
	

	<select id="findAllUsers" resultType="UserInfo">
		select * from userInfo limit #{pagenumber},#{pagesize}
	</select>
	
	<select id="getTotal" resultType="String">
		select count(1) from userInfo
	</select>
	
	<delete id="delUserInfo"  parameterType="UserInfo" >
		delete from userInfo where user_id=#{user_id}
	</delete>
	
	<delete id="delUserInfos" parameterType="java.util.List" >
		delete from userInfo where user_id in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
</mapper>